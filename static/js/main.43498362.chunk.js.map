{"version":3,"sources":["components/Article.js","components/Articles.js","components/FactOfTheDay.js","App.js","reportWebVitals.js","index.js"],"names":["Article","props","className","title","date","Section","name","articles","map","ele","Fact","AnimSection","a","Container","styled","div","App","href","sections","header","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"q1EAaeA,EAXC,SAACC,GACb,OAAQ,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,OAAf,SACKD,EAAME,QAEX,qBAAKD,UAAU,YAAf,SACKD,EAAMG,WCEZC,EAPC,SAACJ,GACb,OAAQ,sBAAKC,UAAU,UAAf,UACI,qBAAKA,UAAU,UAAf,SAA0BD,EAAMK,OAC/BL,EAAMM,SAASC,KAAI,SAAAC,GAAG,OAAI,cAAC,EAAD,CAASN,MAAOM,EAAIN,MAAOC,KAAMK,EAAIL,cCEjEM,EANF,WACT,OAAQ,sBAAKR,UAAU,OAAf,8BACqB,uBADrB,kC,QCMNS,EAAcC,YAAEP,GAEhBQ,EAAYC,YAAOF,IAAEG,IAATD,CAAH,8DAKA,SAASE,IACtB,OACE,eAACH,EAAD,WACE,mBAAGX,UAAU,QAAQe,KAAK,IAA1B,6BAGA,cAAC,EAAD,IACA,cAAC,IAAEF,IAAH,CAAOb,UAAU,SAAjB,SACGgB,EAASV,KAAI,SAAAC,GAAG,OAAI,cAACE,EAAD,CAAaL,KAAMG,EAAIU,OAAQZ,SAAUE,EAAIF,mBCxB1E,IAYea,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.43498362.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Article = (props) => {\r\n    return  <div className=\"article\">\r\n                <div className=\"text\">\r\n                    {props.title}\r\n                </div>\r\n                <div className=\"timestamp\">\r\n                    {props.date}\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default Article;","import React from 'react'\r\nimport Article from './Article';\r\n\r\nconst Section = (props) => {\r\n    return  <div className=\"section\"> \r\n                <div className=\"heading\">{props.name}</div>\r\n                {props.articles.map(ele => <Article title={ele.title} date={ele.date}/>)}\r\n            </div>\r\n}\r\n\r\nexport default Section;","import React from 'react'\r\n\r\nconst Fact = () => {\r\n    return  <div className=\"fact\">\r\n                Fact of the day: <br/> Turtles love to eat Straws\r\n            </div>\r\n}\r\n\r\nexport default Fact;","import './App.css'\nimport React, { useState } from 'react';\nimport styled from 'styled-components'\nimport { a, useSpring } from '@react-spring/web'\n\nimport Section from './components/Articles';\nimport Fact from './components/FactOfTheDay';\nimport sections from './Articles.json'\n\nconst AnimSection = a(Section)\n\nconst Container = styled(a.div)`\n  width: 100%;\n  height: 100vh;\n`\n\nexport default function App() {\n  return (\n    <Container>\n      <a className=\"title\" href=\"/\">\n        Uneventful News\n      </a>\n      <Fact/>\n      <a.div className=\"slider\">\n        {sections.map(ele => <AnimSection name={ele.header} articles={ele.articles}/>)}\n      </a.div>\n    </Container>\n  );\n}\n// todo: \n// react-spring and react-router are unused, ran out of time\n\n// to add in the future:\n// I did not have enought time to do this be I really would have added animations with react-spring and react-use-gesture\n// navbar that jumps to a particular article section\n// interaction with an api of a particular news site / reddit to fetch random articles instead of using nothing / lorem ipsdum","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}